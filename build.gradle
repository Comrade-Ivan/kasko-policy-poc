plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.liquibase.gradle' version '2.2.1'
}

group = "ru.motorinsurance"
version = "1.0.0"
description = "Policy Service"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    springCloudVersion = "2025.0.0"
    lombokVersion = "1.18.30"
    mapstructVersion = "1.5.5.Final"
    logstashLogbackEncoderVersion = "7.4"
    commonsIoVersion = "2.15.1"
    mockitoVersion = "5.18.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Spring Boot Starters
    implementation 'ru.motorinsurance.common:common-core:1.0.0'
    implementation 'ru.motorinsurance.common:common-db:1.0.0'
    implementation 'ru.motorinsurance.common:common-kafka:1.0.0'
    implementation 'ru.motorinsurance.common:common-utils:1.0.0'
    implementation 'ru.motorinsurance.common:common-web:1.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    compileOnly 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    systemProperty 'file.encoding', 'UTF-8'
    useJUnitPlatform()
    jvmArgs = ["-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}"]
}

javadoc {
    options.encoding = 'UTF-8'
}

bootRun {
    systemProperty 'spring.profiles.active', findProperty('active-profile') ?: "default"
}